#!/bin/bash

set -u

TDIR="{{retronas_root}}/bin/Hardware-Target-Game-Database"
MANIPULATE=0
FORCE=0
XTERMINATE=0
TARGET=""

declare -A SYSTEMS

SYSTEMS=(
  [atari/2600]="Atari 2600 SMDB.txt"
  [atari/5200]="Atari 5200 SMDB.txt"
  [atari/7800]="Atari 7800 SMDB.txt"
  [atari/lynx]="Atari Lynx SMDB.txt"
  [nec/pcengine]="Turbo EverDrive & Super SD System 3 SMDB.txt"
  [nec/pcenginecd]="PC Engine CD Redump Supplement.txt"
  [nintendo/famicom_disk]="Famicom Disk System SMDB.txt"
  [nintendo/gameboy]="Game Boy SMDB.txt"
  [nintendo/gameboyadvance]="EverDrive GBA SMDB.txt"
  [nintendo/gameboycolor]="Game Boy Color SMDB.txt"
  [nintendo/nintendo64]="EverDrive 64 & 64drive SMDB.txt"
  [nintendo/snes]="Super EverDrive & SD2SNES SMDB.txt"
  [nintendo/nes]="EverDrive N8 & PowerPak SMDB.txt"
  [other/coleco_colecovision]="Colecovision SMDB.txt"
  [sega/gamegear]="EverDrive GG SMDB.txt"
  [sega/mastersystem]="Master EverDrive SMDB.txt"
  [sega/megacd]="SegaCD.txt"
  [sega/megadrive]="Mega EverDrive SMDB.txt"
  [sega/saturn]="Saturn Redump Supplement.txt"
)


## REQUIREMENTS
[ ! -d "${TDIR}" ] &&  echo "Cannot locate ROM import SMBD directory. Please add it from the Install Things menu." && exit 1

## hacky af
list_targets() {
  echo "Use id with -t to run a single system"
  echo "-------------------------------------"

  ### dump to screen
  for SYSTEM in ${!SYSTEMS[@]}
  do
    echo "id: ${SYSTEM}, ${SYSTEMS[$SYSTEM]}"
  done | column -s"," -t
  exit 0
}

_usage() {
  echo "Usage $0" 
  echo "-h this help"
  echo "-t target system"
  echo "-l list available targets"
  exit 0
}

OPTSTRING="hlt:"
while getopts $OPTSTRING ARG
do
  case $ARG in
    h)
      _usage
      ;;
    l)
      # list targets
      list_targets
      ;;
    t)
      TARGET=${OPTARG}
      ;;
  esac
done

run_buildpack() {
  local ODIR="${1}"
  local SMDB="${2}"

  # UNARMED FOR TESTING
  cd "${TDIR}"
  python3 build_pack.py --input_folder "{{retronas_path}}/romimport" --output_folder "${ODIR}" --database "${SMDB}" --file_strategy smart --skip_existing --drop_initial_directory

}

updateSMDB() {
  cd ${TDIR}
  echo "Refreshing SMBDs..."
  umask 0002
  git config pull.rebase false
  git reset --hard HEAD
  git pull
}

auditsystem() {

  local SYSTEM="${1:-IAMNOTFOUND}"

  if [ ${SYSTEMS[${SYSTEM}]+_} ]
  then
    ODIR="{{retronas_path}}/roms/${SYSTEM}"
    SMDB="./EverDrive Pack SMDBs/${SYSTEMS[${SYSTEM}]}"

    if [ -d "${ODIR}" ]
    then 
      echo '------------------------'
      echo "Analysing with ${SMDB}"
      echo "Outputting to ${ODIR}"
      run_buildpack "${ODIR}" "${SMDB}"
      echo -e '------------------------\n'
    else
      echo "Failed to file output directory ${ODIR}"
    fi
  else 
    _usage
  fi
}

if [ -z "${TARGET}" ]
then
  updateSMDB
  for SYSTEM in ${!SYSTEMS[@]}
  do
    auditsystem ${SYSTEM}
  done
else
  auditsystem ${TARGET}
fi
