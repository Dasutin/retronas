- hosts: localhost

  vars:
    - my_name: "hdparm"
    - my_file: "install_{{ my_name }}"

    - systemd_units:
      - { name: "{{ my_name }}", type: "timer", state: "stopped", instance: "no", enabled: "no", restart: "no" }
      - { name: "{{ my_name }}", type: "service", state: "stopped", instance: "no", enabled: "no", restart: "no" }

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    include_vars: retronas_vars.yml

  - name: "{{ my_name }} - Install from repos"
    apt:
       name:
         - hdparm
       state: latest
    notify:
    - "{{ my_name }} - Restart services"

  - name: "{{ my_name }} - install script"
    template:
      src: "templates/{{ my_file }}/{{ my_name }}.sh.j2"
      dest: "{{ retronas_root }}/scripts/{{ my_name }}.sh"
      owner: root
      group: root
      mode: '0750'
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - create startup service"
    template:
      src: templates/{{ my_file }}/{{ item.name }}.{{ item.type }}.j2
      dest: /usr/lib/systemd/system/{{ item.name }}.{{ item.type }}
      owner: root
      group: root
      mode: 0644
    with_items:
      - "{{ systemd_units }}"
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - enable startup service"
    service:
      name: "{{ item.name }}"
      state: started
      enabled: "{{ item.enabled }}"
      daemon_reload: yes
    with_items:
      - "{{ systemd_units }}"
    when:
      - item.enabled == "yes"

  handlers:

  - name: "{{ my_name }} - Restart service"
    service:
      name: "{{ item }}"
      state: restarted
      daemon_reload: yes
    with_items:
      - "{{ systemd_units }}"
    when:
      - item.restart == "yes"